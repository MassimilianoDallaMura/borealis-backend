# ===============================
# Configurazione Database PostgreSQL
# ===============================


# spring.application.name=backend
# DataSource Configuration (PostgreSQL)
#spring.datasource.url=jdbc:postgresql://localhost:5432/borealis?sslmode=disable&stringtype=unspecified&prepareThreshold=0
#spring.datasource.username=massimilianodallamura
#spring.datasource.password=RinoeTuna25!


# --- CONFIGURAZIONE PER TEST IN LOCALE (SCONSIGLIATA IN PRODUZIONE) ---
# Usa questa sezione solo per fare un test sul tuo computer.
# Inserisci qui direttamente i tuoi dati.
# DOPO il test, RICORDATI DI COMMENTARE queste righe e DECOMMENTARE quelle di Render.
spring.application.name=borealis-backend-db
#spring.datasource.url=jdbc:postgresql://dpg-d2do2ter433s73ekttb0-a.frankfurt-postgres.render.com:5432/borealis_market_db?sslmode=require
#spring.datasource.username=myuser
#spring.datasource.password=o0rLrwu4Mtl9vKh46UmxKSIh9JrFAW9H

# ===============================
# Configurazione Database PostgreSQL
# ===============================

# Configurazione per il deployment su Render, che utilizza variabili d'ambiente.
# Queste variabili sono quelle che imposterai nella dashboard di Render.
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Configura il nome del databasce e la modalità SSL usando le nuove variabili d'ambiente
spring.datasource.database=${SPRING_DATASOURCE_DATABASE}
spring.datasource.ssl=${SPRING_DATASOURCE_SSL}

# Driver JDBC per PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# Specifica esplicitamente il dialetto di Hibernate per PostgreSQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# Configurazione JWT
# ===============================

# Chiave segreta per la firma e la verifica dei token JWT.
# Viene letta da una variabile d'ambiente su Render per sicurezza.
borealis.app.jwtSecret=${BOREALIS_APP_JWTSECRET}

# Tempo di scadenza del token in millisecondi (86400000 ms = 24 ore)
borealis.app.jwtExpirationMs=86400000


# Abilita la visualizzazione delle query SQL generate da Hibernate
spring.jpa.show-sql=true

# Formatta le query SQL per una migliore leggibilità
spring.jpa.properties.hibernate.format_sql=true

# Imposta l'azione DDL (Data Definition Language)
# 'update' è utile per lo sviluppo, 'none' o 'validate' sono consigliati per la produzione.
spring.jpa.hibernate.ddl-auto=update

# ===============================
# Log di Hibernate/JPA
# ===============================
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.orm.jdbc.bind=INFO
